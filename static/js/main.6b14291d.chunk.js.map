{"version":3,"sources":["releases/0.36.js","releases/0.37.js","assets/logo.svg","releases sync /^/.//.*$","utils.js","components/common/Select.js","components/common/VersionSelector.js","components/common/Diff/DiffHeader.js","components/common/Markdown.js","components/common/Diff/DiffComment.js","components/common/Diff/Diff.js","components/common/Diff/DiffSection.js","components/common/Diff/DiffLoading.js","components/common/UpgradeSupportAlert.js","components/common/UsefulContentSection.js","components/common/Diff/DiffViewStyleOptions.js","components/common/CompletedFilesCounter.js","components/common/AppNameWarning.js","components/common/DiffViewer.js","components/common/Settings.js","components/pages/Home.js","App.jsx","serviceWorker.js","index.jsx","releases/index.js","releases/__mocks__/index.js"],"names":["usefulContent","description","links","title","url","comments","fileName","lineNumber","lineChangeType","content","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","RELEASES_URL","getDiffPatchURL","fromVersion","toVersion","getBinaryFileURL","version","path","getVersionsInDiff","cleanedToVersion","semver","valid","coerce","versions","filter","cleanedVersion","compare","includes","getChangelogURL","replace","SHOW_LATEST_RCS","Option","AntdSelect","SelectBoxContainer","SelectBox","Select","options","props","size","option","key","value","Selectors","FromVersionSelector","ToVersionSelector","popover","React","cloneElement","children","ButtonContainer","compareReleaseCandidateVersions","versionToCompare","diff","getReleasedVersionsWithCandidates","releasedVersions","latestVersion","showReleaseCandidates","isToVersionAReleaseCandidate","prerelease","isLatestAReleaseCandidate","releasedVersion","checkIfVersionIsALatestRC","getReleasedVersions","minVersion","maxVersion","latestMajorReleaseVersion","find","patch","getLatestMajorReleaseVersion","length","lt","gt","getFirstMajorRelease","doesVersionExist","allVersions","_error","VersionSelector","showDiff","useState","isLoading","setLoading","setAllVersions","fromVersionList","setFromVersionList","toVersionList","setToVersionList","hasVersionsFromURL","setHasVersionsFromURL","localFromVersion","setLocalFromVersion","localToVersion","setLocalToVersion","upgradeButtonEl","useRef","useEffect","versionsInURL","queryString","parse","window","location","search","from","to","getVersionsInURL","a","fetch","response","text","allVersionsFromResponse","split","hasFromVersionInURL","hasToVersionInURL","toVersionToBeSet","sanitizedVersions","fromVersionToBeSet","doesHaveVersionsInURL","current","onClick","fetchVersions","onShowDiff","pageURL","href","newURL","history","replaceState","updateURLVersions","loading","onChange","chosenVersion","visible","placement","ref","type","Wrapper","FileRenameArrow","RightOutlined","FileName","oldPath","newPath","FileStatus","color","add","modify","delete","rename","BinaryBadge","ViewFileButton","target","defaultIconButtonStyle","CompleteDiffButton","icon","RollbackOutlined","CheckOutlined","isDiffCompleted","CopyPathToClipboardButton","onCopy","copyPathPopoverContent","resetCopyPathPopoverContent","trigger","overlayStyle","width","textAlign","CopyOutlined","onMouseOver","CollapseClickableArea","CollapseDiffButton","isDiffCollapsed","DownOutlined","DiffHeader","diffKey","hasDiff","setIsDiffCollapsed","onCompleteDiff","onCopyPathToClipboard","sanitizedFilePaths","altKey","Link","rel","InlineCode","forceBlock","overrides","em","p","CommentContainer","CommentContent","CommentButton","Button","LINE_CHANGE_TYPES","ADD","DELETE","NEUTRAL","getComments","some","reduce","allComments","versionComments","toUpperCase","getLineNumberWithType","DiffComment","displayComment","toggleComment","shape","CloseOutlined","MessageOutlined","Markdown","Container","More","Decoration","DiffDecoration","DiffView","RDiff","memo","hunks","selectedChanges","onToggleChangeSelection","areAllCollapsed","setAllCollapsed","diffViewStyle","copyPathPopoverContentOpts","setCopyPathPopoverContent","undefined","collapse","viewType","diffType","widgets","optimizeSelection","enhancers","markEdits","tokens","tokenize","hunk","gutterEvents","prevProps","nextProps","Title","DiffSection","getDiffKey","completedDiffs","isDoneSection","handleCompleteDiff","doneTitleRef","diffFile","oldRevision","newRevision","TitleLoader","speed","backgroundColor","foregroundColor","viewBox","height","rx","DiffLoader","x","y","SkeletonContainer","Header","UsefulContentNoData","css","Component","UpgradeSupportAlert","isVisible","InnerContainer","Icon","role","aria-label","CloseButton","toggleVisibility","ReleaseSeparator","List","UsefulContentSection","state","handleToggleVisibility","setState","nextState","hasLoaded","this","hasBeenHidden","hasMoreThanOneRelease","versionWithoutEndingZero","slice","DiffViewStyleOptions","handleViewStyleChange","Group","shake","keyframes","CompletedFilesCounter","completed","total","popoverContent","popoverCursorType","position","className","active","config","elementCount","angle","startVelocity","AppNameWarning","message","closable","withChangeSelect","multiple","setDiff","setCompletedDiffs","isGoToDoneClicked","setIsGoToDoneClicked","donePopoverPossibleOpts","cursorType","donePopoverOpts","setDonePopoverOpts","localStorage","getItem","setViewStyle","fetchDiff","parseDiff","sort","debounce","setTimeout","clearTimeout","diffSectionProps","prevCompletedDiffs","completedDiff","newViewStyle","setItem","style","marginTop","showIcon","renderUpgradeDoneMessage","scrollTo","top","behavior","scrollIntoView","Settings","handleSettingsChange","popoverVisibility","setVisibility","checkboxValues","onVisibleChange","visibility","SettingOutlined","Page","Card","TitleContainer","LogoImg","TitleHeader","StarButton","Home","setFromVersion","setToVersion","setShowDiff","settings","setSettings","ReactGA","initialize","pageview","alt","src","logo","homepage","data-icon","data-show-count","settingsValues","normalizedIncomingSettings","acc","val","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","require","default","jest","setMock"],"mappings":"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","file":"static/js/main.6b14291d.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n\nexport default {\n  usefulContent: {\n    description: 'Deno 0.36.0 includes 2 breaking changes.',\n    links: [\n      {\n        title: 'Remove Deno.errors.Other',\n        url: 'https://github.com/denoland/deno/pull/4249'\n      },\n      {\n        title: 'Rename readDir -> readdir',\n        url: 'https://github.com/denoland/deno/pull/4225'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'lib.deno.ns.d.ts',\n      lineNumber: 237,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          Rename `readDir` -> `readdir`, [see\n          more](https://github.com/denoland/deno/pull/4225).\n        </Fragment>\n      )\n    }\n  ]\n}\n","import React, { Fragment } from 'react'\n\nexport default {\n  usefulContent: {\n    description: 'Deno 0.37.0 includes 2 breaking changes.',\n    links: [\n      {\n        title: 'FileInfo.len renamed to FileName.size',\n        url: 'https://github.com/denoland/deno/pull/4338'\n      },\n      {\n        title: \"Rename Deno.run's args to cmd\",\n        url: 'https://github.com/denoland/deno/pull/4444'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'lib.deno.ns.d.ts',\n      lineNumber: 282,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          `FileInfo.len` renamed to `FileName.size`, [see\n          more](https://github.com/denoland/deno/pull/4338).\n        </Fragment>\n      )\n    },\n    {\n      fileName: 'lib.deno.ns.d.ts',\n      lineNumber: 541,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          Rename `Deno.run`'s `args` to `cmd`, [see\n          more](https://github.com/denoland/deno/pull/4444).\n        </Fragment>\n      )\n    }\n  ]\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.01573815.svg\";","var map = {\n\t\"./\": 62,\n\t\"./0.36\": 122,\n\t\"./0.36.js\": 122,\n\t\"./0.37\": 123,\n\t\"./0.37.js\": 123,\n\t\"./__mocks__\": 66,\n\t\"./__mocks__/\": 66,\n\t\"./__mocks__/index\": 66,\n\t\"./__mocks__/index.js\": 66,\n\t\"./index\": 62,\n\t\"./index.js\": 62\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 217;","import semver from 'semver/preload'\nimport versions from './releases'\n\nconst DENO_API_DIFF_REPO = 'denodev/deno_api_diff_clean'\n\nexport const RELEASES_URL = `https://raw.githubusercontent.com/${DENO_API_DIFF_REPO}/master/RELEASES`\n\nexport const getDiffPatchURL = ({ fromVersion, toVersion }) =>\n  `https://raw.githubusercontent.com/${DENO_API_DIFF_REPO}/diffs/diffs/${fromVersion}...${toVersion}.diff`\n\nexport const getBinaryFileURL = ({ version, path }) =>\n  `https://github.com/${DENO_API_DIFF_REPO}/raw/${version}/${path}`\n\nexport const getVersionsInDiff = ({ fromVersion, toVersion }) => {\n  const cleanedToVersion = semver.valid(semver.coerce(toVersion))\n\n  return versions.filter(({ version }) => {\n    const cleanedVersion = semver.coerce(version)\n\n    // `cleanedVersion` can't be newer than `cleanedToVersion` nor older (or equal) than `fromVersion`\n    return (\n      semver.compare(cleanedToVersion, cleanedVersion) !== -1 &&\n      ![0, -1].includes(semver.compare(cleanedVersion, fromVersion))\n    )\n  })\n}\n\nconst baseChangelogURL =\n  'https://github.com/denoland/deno/blob/master/Releases.md'\nexport const getChangelogURL = ({ version }) =>\n  `${baseChangelogURL}#v${version.replace('.', '')}0`\n\n// settings constants\nexport const SHOW_LATEST_RCS = 'Show latest release candidates'\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Select as AntdSelect } from 'antd'\n\nconst { Option } = AntdSelect\n\nconst SelectBoxContainer = styled.div`\n  width: 100%;\n`\nconst SelectBox = styled(AntdSelect)`\n  width: 100%;\n`\n\nconst Select = ({ title, options, ...props }) => (\n  <SelectBoxContainer>\n    <h4>{title}</h4>\n\n    <SelectBox size=\"large\" {...props}>\n      {options.map(option => (\n        <Option key={option} value={option}>\n          {option}\n        </Option>\n      ))}\n    </SelectBox>\n  </SelectBoxContainer>\n)\n\nexport default Select\n","import React, { Fragment, useState, useEffect, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Popover } from 'antd'\nimport semver from 'semver/preload'\nimport queryString from 'query-string'\nimport { RELEASES_URL } from '../../utils'\nimport { Select } from './'\n\nconst Selectors = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst FromVersionSelector = styled(Select)`\n  padding-right: 5px;\n`\n\nconst ToVersionSelector = styled(({ popover, ...props }) =>\n  popover ? (\n    React.cloneElement(popover, {\n      children: <Select {...props} />\n    })\n  ) : (\n    <Select {...props} />\n  )\n)`\n  padding-left: 5px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: auto;\n  overflow: hidden;\n  margin-top: 25px;\n`\n\nconst getVersionsInURL = () => {\n  // Parses `/?from=VERSION&to=VERSION` from URL\n  const { from: fromVersion, to: toVersion } = queryString.parse(\n    window.location.search\n  )\n\n  return {\n    fromVersion,\n    toVersion\n  }\n}\n\nconst compareReleaseCandidateVersions = ({ version, versionToCompare }) =>\n  ['prerelease', 'prepatch', null].includes(\n    semver.diff(version, versionToCompare)\n  )\n\nconst getLatestMajorReleaseVersion = releasedVersions =>\n  semver.valid(\n    semver.coerce(\n      releasedVersions.find(\n        releasedVersion =>\n          !semver.prerelease(releasedVersion) &&\n          semver.patch(releasedVersion) === 0\n      )\n    )\n  )\n\n// Check if `from` rc version is one of the latest major release (ie. 0.60.0)\nconst checkIfVersionIsALatestRC = ({ version, latestVersion }) =>\n  semver.prerelease(version) &&\n  compareReleaseCandidateVersions({\n    version: latestVersion,\n    versionToCompare: version\n  })\n\n// Filters out release candidates from `releasedVersion` with the\n// exception of the release candidates from the latest version\nconst getReleasedVersionsWithCandidates = ({\n  releasedVersions,\n  toVersion,\n  latestVersion,\n  showReleaseCandidates\n}) => {\n  const isToVersionAReleaseCandidate = semver.prerelease(toVersion) !== null\n  const isLatestAReleaseCandidate = semver.prerelease(latestVersion) !== null\n\n  return releasedVersions.filter(releasedVersion => {\n    // Show the release candidates of the latest version\n    const isLatestReleaseCandidate =\n      showReleaseCandidates &&\n      checkIfVersionIsALatestRC({\n        version: releasedVersion,\n        latestVersion\n      })\n\n    return (\n      isLatestReleaseCandidate ||\n      semver.prerelease(releasedVersion) === null ||\n      (isToVersionAReleaseCandidate &&\n        compareReleaseCandidateVersions({\n          version: toVersion,\n          versionToCompare: releasedVersion\n        })) ||\n      (isLatestAReleaseCandidate &&\n        compareReleaseCandidateVersions({\n          version: latestVersion,\n          versionToCompare: releasedVersion\n        }))\n    )\n  })\n}\n\nconst getReleasedVersions = ({ releasedVersions, minVersion, maxVersion }) => {\n  const latestMajorReleaseVersion = getLatestMajorReleaseVersion(\n    releasedVersions\n  )\n\n  const isVersionAReleaseAndOfLatest = version =>\n    version.includes('rc') &&\n    semver.valid(semver.coerce(version)) === latestMajorReleaseVersion\n\n  return releasedVersions.filter(\n    releasedVersion =>\n      releasedVersion.length > 0 &&\n      ((maxVersion && semver.lt(releasedVersion, maxVersion)) ||\n        (minVersion &&\n          semver.gt(releasedVersion, minVersion) &&\n          !isVersionAReleaseAndOfLatest(releasedVersion)))\n  )\n}\n\n// Finds the first minor release (which in Deno is the major) when compared to another version\nconst getFirstMajorRelease = ({ releasedVersions, versionToCompare }) =>\n  releasedVersions.find(\n    releasedVersion =>\n      semver.lt(releasedVersion, versionToCompare) &&\n      semver.diff(\n        semver.valid(semver.coerce(releasedVersion)),\n        semver.valid(semver.coerce(versionToCompare))\n      ) === 'minor'\n  )\n\n// Return if version exists in the ones returned from GitHub\nconst doesVersionExist = ({ version, allVersions, minVersion }) => {\n  try {\n    return (\n      version &&\n      allVersions.includes(version) &&\n      // Also compare the version against a `minVersion`, this is used\n      // to not allow the user to have a `fromVersion` newer than `toVersion`\n      (!minVersion || (minVersion && semver.gt(version, minVersion)))\n    )\n  } catch (_error) {\n    return false\n  }\n}\n\nconst updateURLVersions = ({ fromVersion, toVersion }) => {\n  const pageURL = window.location.href.replace(window.location.search, '')\n  const newURL = `?from=${fromVersion}&to=${toVersion}`\n\n  window.history.replaceState(null, null, `${pageURL}${newURL}`)\n}\n\nconst VersionSelector = ({ showDiff, showReleaseCandidates }) => {\n  const [isLoading, setLoading] = useState(true)\n  const [allVersions, setAllVersions] = useState([])\n  const [fromVersionList, setFromVersionList] = useState([])\n  const [toVersionList, setToVersionList] = useState([])\n  const [hasVersionsFromURL, setHasVersionsFromURL] = useState(false)\n\n  const [localFromVersion, setLocalFromVersion] = useState('')\n  const [localToVersion, setLocalToVersion] = useState('')\n\n  const upgradeButtonEl = useRef(null)\n\n  useEffect(() => {\n    const versionsInURL = getVersionsInURL()\n\n    const fetchVersions = async () => {\n      const response = await fetch(RELEASES_URL)\n\n      const allVersionsFromResponse = (await response.text()).split('\\n')\n\n      // Check if the versions provided in the URL are valid\n      const hasFromVersionInURL = doesVersionExist({\n        version: versionsInURL.fromVersion,\n        allVersions: allVersionsFromResponse\n      })\n      const hasToVersionInURL = doesVersionExist({\n        version: versionsInURL.toVersion,\n        allVersions: allVersionsFromResponse,\n        minVersion: versionsInURL.fromVersion\n      })\n\n      const latestVersion = allVersionsFromResponse[0]\n      // If the version from URL is not valid then fallback to the latest\n      const toVersionToBeSet = hasToVersionInURL\n        ? versionsInURL.toVersion\n        : latestVersion\n\n      // Remove `rc` versions from the array of versions\n      const sanitizedVersions = getReleasedVersionsWithCandidates({\n        releasedVersions: allVersionsFromResponse,\n        toVersion: toVersionToBeSet,\n        latestVersion,\n        showReleaseCandidates\n      })\n\n      setAllVersions(sanitizedVersions)\n\n      const fromVersionToBeSet = hasFromVersionInURL\n        ? versionsInURL.fromVersion\n        : // Get first major release before latest\n          getFirstMajorRelease({\n            releasedVersions: sanitizedVersions,\n            versionToCompare: toVersionToBeSet\n          })\n\n      setFromVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersions,\n          maxVersion: toVersionToBeSet\n        })\n      )\n      setToVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersions,\n          minVersion: fromVersionToBeSet\n        })\n      )\n\n      setLocalFromVersion(fromVersionToBeSet)\n      setLocalToVersion(toVersionToBeSet)\n\n      setLoading(false)\n\n      const doesHaveVersionsInURL = hasFromVersionInURL && hasToVersionInURL\n\n      setHasVersionsFromURL(doesHaveVersionsInURL)\n\n      if (doesHaveVersionsInURL) {\n        upgradeButtonEl.current.props.onClick()\n      }\n    }\n\n    fetchVersions()\n  }, [setLocalFromVersion, setLocalToVersion, showReleaseCandidates])\n\n  useEffect(() => {\n    if (isLoading) {\n      return\n    }\n\n    setFromVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        maxVersion: localToVersion\n      })\n    )\n    setToVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        minVersion: localFromVersion\n      })\n    )\n  }, [\n    isLoading,\n    allVersions,\n    localFromVersion,\n    localToVersion,\n    hasVersionsFromURL,\n    showReleaseCandidates\n  ])\n\n  const onShowDiff = ({ fromVersion, toVersion }) => {\n    showDiff({\n      fromVersion,\n      toVersion\n    })\n\n    updateURLVersions({\n      fromVersion: localFromVersion,\n      toVersion: localToVersion\n    })\n  }\n\n  return (\n    <Fragment>\n      <Selectors>\n        <FromVersionSelector\n          title=\"What's your current Deno version?\"\n          loading={isLoading}\n          value={localFromVersion}\n          options={fromVersionList}\n          onChange={chosenVersion => setLocalFromVersion(chosenVersion)}\n        />\n\n        <ToVersionSelector\n          title=\"To which version would you like to upgrade?\"\n          loading={isLoading}\n          value={localToVersion}\n          options={toVersionList}\n          popover={\n            localToVersion === '0.37.1' && (\n              <Popover\n                visible={true}\n                placement=\"topLeft\"\n                content=\"We recommend using the latest 0.37 patch release instead of 0.37.1.\"\n              />\n            )\n          }\n          onChange={chosenVersion => setLocalToVersion(chosenVersion)}\n        />\n      </Selectors>\n\n      <ButtonContainer>\n        <Button\n          ref={upgradeButtonEl}\n          type=\"primary\"\n          size=\"large\"\n          onClick={() =>\n            onShowDiff({\n              fromVersion: localFromVersion,\n              toVersion: localToVersion\n            })\n          }\n        >\n          Show me how to upgrade!\n        </Button>\n      </ButtonContainer>\n    </Fragment>\n  )\n}\n\nexport default VersionSelector\n","import React, { Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { Tag, Button, Popover } from 'antd'\nimport {\n  CheckOutlined,\n  DownOutlined,\n  RightOutlined,\n  CopyOutlined,\n  RollbackOutlined\n} from '@ant-design/icons'\nimport { getBinaryFileURL } from '../../../utils'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n    monospace;\n  font-size: 12px;\n  color: #24292e;\n  line-height: 32px;\n  background-color: #fafbfc;\n  border-bottom: 1px solid #e1e4e8;\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n  padding: 5px 10px;\n`\n\nconst FileRenameArrow = styled(RightOutlined)({\n  fontSize: '10px',\n  margin: '0 5px',\n  color: '#f78206'\n})\n\nconst FileName = ({ oldPath, newPath, type }) => {\n  if (type === 'delete') {\n    return <span>{oldPath}</span>\n  }\n\n  if (oldPath !== newPath && type !== 'add') {\n    return (\n      <span>\n        {oldPath} <FileRenameArrow /> {newPath}\n      </span>\n    )\n  }\n\n  return <span>{newPath}</span>\n}\n\nconst FileStatus = ({ type, ...props }) => {\n  const colors = {\n    add: 'blue',\n    modify: 'green',\n    delete: 'red',\n    rename: 'orange'\n  }\n\n  const labels = {\n    add: 'ADDED',\n    modify: 'MODIFIED',\n    delete: 'DELETED',\n    rename: 'RENAMED'\n  }\n\n  return (\n    <Tag {...props} color={colors[type]}>\n      {labels[type]}\n    </Tag>\n  )\n}\n\nconst BinaryBadge = ({ visible, ...props }) =>\n  visible ? (\n    <Tag {...props} color=\"cyan\">\n      BINARY\n    </Tag>\n  ) : null\n\nconst ViewFileButton = styled(({ visible, version, path, ...props }) =>\n  visible ? (\n    <Button\n      {...props}\n      type=\"link\"\n      target=\"_blank\"\n      href={getBinaryFileURL({ version, path })}\n    >\n      View file\n    </Button>\n  ) : null\n)`\n  font-size: 12px;\n  color: #24292e;\n`\n\nconst defaultIconButtonStyle = `\n  font-size: 13px;\n  line-height: 0;\n  border-width: 0px;\n  width: 22px;\n  height: 22px;\n  margin: 5px 0;\n  border-radius: 50%;\n`\n\nconst CompleteDiffButton = styled(({ visible, onClick, ...props }) =>\n  visible ? (\n    <Button\n      {...props}\n      type=\"ghost\"\n      icon={<RollbackOutlined />}\n      onClick={onClick}\n    />\n  ) : (\n    <Button\n      {...props}\n      type=\"ghost\"\n      icon={<CheckOutlined />}\n      onClick={onClick}\n    />\n  )\n)`\n  ${defaultIconButtonStyle}\n  &,\n  &:hover,\n  &:focus {\n    color: ${({ isDiffCompleted }) =>\n      isDiffCompleted ? '#52c41a' : '#24292e'};\n  }\n`\n\nconst CopyPathToClipboardButton = styled(\n  ({\n    oldPath,\n    newPath,\n    type,\n    onCopy,\n    copyPathPopoverContent,\n    resetCopyPathPopoverContent,\n    ...props\n  }) => (\n    <CopyToClipboard text={type === 'add' ? newPath : oldPath} onCopy={onCopy}>\n      <Popover\n        content={copyPathPopoverContent}\n        trigger=\"hover\"\n        overlayStyle={{\n          width: '175px',\n          textAlign: 'center'\n        }}\n      >\n        <Button\n          {...props}\n          type=\"ghost\"\n          icon={<CopyOutlined />}\n          onMouseOver={resetCopyPathPopoverContent}\n        />\n      </Popover>\n    </CopyToClipboard>\n  )\n)`\n  ${defaultIconButtonStyle}\n`\n\nconst CollapseClickableArea = styled.div`\n  display: inline-block;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst CollapseDiffButton = styled(({ visible, isDiffCollapsed, ...props }) =>\n  visible ? <Button {...props} type=\"link\" icon={<DownOutlined />} /> : null\n)`\n  color: #24292e;\n  margin-right: 2px;\n  font-size: 10px;\n  transform: ${({ isDiffCollapsed }) =>\n    isDiffCollapsed ? 'rotate(-90deg)' : 'initial'};\n  transition: transform 0.2s ease-in-out;\n  transform-origin: center;\n  line-height: 0;\n  height: auto;\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst DiffHeader = ({\n  oldPath,\n  newPath,\n  toVersion,\n  type,\n  diffKey,\n  hasDiff,\n  isDiffCollapsed,\n  setIsDiffCollapsed,\n  isDiffCompleted,\n  onCompleteDiff,\n  onCopyPathToClipboard,\n  copyPathPopoverContent,\n  resetCopyPathPopoverContent,\n  ...props\n}) => {\n  const sanitizedFilePaths = { oldPath, newPath }\n\n  return (\n    <Wrapper {...props}>\n      <div>\n        <CollapseClickableArea\n          onClick={({ altKey }) => setIsDiffCollapsed(!isDiffCollapsed, altKey)}\n        >\n          <CollapseDiffButton\n            visible={hasDiff}\n            isDiffCollapsed={isDiffCollapsed}\n          />\n          <FileName\n            oldPath={sanitizedFilePaths.oldPath}\n            newPath={sanitizedFilePaths.newPath}\n            type={type}\n          />{' '}\n          <FileStatus type={type} />\n          <BinaryBadge visible={!hasDiff} />\n        </CollapseClickableArea>\n        <CopyPathToClipboardButton\n          oldPath={sanitizedFilePaths.oldPath}\n          newPath={sanitizedFilePaths.newPath}\n          type={type}\n          onCopy={onCopyPathToClipboard}\n          copyPathPopoverContent={copyPathPopoverContent}\n          resetCopyPathPopoverContent={resetCopyPathPopoverContent}\n        />\n      </div>\n      <div>\n        <Fragment>\n          <ViewFileButton\n            visible={hasDiff && type !== 'delete'}\n            version={toVersion}\n            path={newPath}\n          />\n          <CompleteDiffButton\n            visible={isDiffCompleted}\n            onClick={() => onCompleteDiff(diffKey)}\n          />\n        </Fragment>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default DiffHeader\n","import React from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport styled from '@emotion/styled'\n\nexport const Link = styled(props => (\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n  <a target=\"_blank\" {...props} rel=\"noopener\" />\n))`\n  text-decoration: none;\n  color: #045dc1;\n`\n\nconst InlineCode = styled.em`\n  font-style: normal;\n  background-color: rgba(27, 31, 35, 0.07);\n  border-radius: 3px;\n  font-size: 85%;\n  margin: 0;\n  padding: 0.2em 0.4em;\n`\n\nexport default ({ forceBlock = false, options = {}, ...props }) => (\n  <Markdown\n    {...props}\n    options={{\n      ...options,\n      forceBlock,\n      overrides: {\n        ...options.overrides,\n        a: Link,\n        em: InlineCode,\n        code: InlineCode,\n        p: styled.p`\n          margin-bottom: 0;\n        `\n      }\n    }}\n  />\n)\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button } from 'antd'\nimport { CloseOutlined, MessageOutlined } from '@ant-design/icons'\nimport { getVersionsInDiff } from '../../../utils'\nimport Markdown from '../Markdown'\n\nconst CommentContainer = styled.div`\n  position: relative;\n`\n\nconst CommentContent = styled.div`\n  margin: 10px;\n  border: 1px solid #e8e8e8;\n  padding: 16px;\n  border-radius: 3px;\n  color: #000;\n`\n\nconst CommentButton = styled(Button)`\n  min-width: initial;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: -1px;\n  left: 5px;\n  font-size: 8px;\n  cursor: 'pointer';\n`\n\nconst LINE_CHANGE_TYPES = {\n  ADD: 'I',\n  DELETE: 'D',\n  NEUTRAL: 'N'\n}\n\nconst getLineNumberWithType = ({ lineChangeType, lineNumber }) =>\n  `${LINE_CHANGE_TYPES[lineChangeType.toUpperCase()]}${lineNumber}`\n\nconst getComments = ({ newPath, fromVersion, toVersion }) => {\n  const versionsInDiff = getVersionsInDiff({ fromVersion, toVersion }).filter(\n    ({ comments }) =>\n      comments &&\n      comments.length > 0 &&\n      comments.some(({ fileName }) => fileName === newPath)\n  )\n\n  return versionsInDiff.reduce((allComments, version) => {\n    const comments = version.comments.reduce(\n      (versionComments, { fileName, lineChangeType, lineNumber, content }) => {\n        if (fileName !== newPath) {\n          return versionComments\n        }\n\n        return {\n          ...versionComments,\n          [getLineNumberWithType({ lineChangeType, lineNumber })]: (\n            <DiffComment content={content} />\n          )\n        }\n      },\n      {}\n    )\n\n    return {\n      ...allComments,\n      ...comments\n    }\n  }, {})\n}\n\nconst DiffComment = ({ content }) => {\n  const [displayComment, toggleComment] = useState(true)\n\n  return (\n    <CommentContainer>\n      <CommentButton\n        shape=\"circle\"\n        type=\"primary\"\n        onClick={() => toggleComment(!displayComment)}\n        icon={displayComment ? <CloseOutlined /> : <MessageOutlined />}\n      />\n      {displayComment && (\n        <CommentContent>\n          <Markdown>{content.props.children}</Markdown>\n        </CommentContent>\n      )}\n    </CommentContainer>\n  )\n}\n\nexport { getComments }\nexport default DiffComment\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport {\n  Diff as RDiff,\n  Hunk,\n  markEdits,\n  tokenize,\n  Decoration as DiffDecoration\n} from 'react-diff-view'\nimport DiffHeader from './DiffHeader'\nimport { getComments } from './DiffComment'\n\nconst Container = styled.div`\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n  margin-bottom: 16px;\n  margin-top: 16px;\n`\n\nconst More = styled.div`\n  background-color: #f1f8ff;\n  margin-left: 30px;\n  padding-left: 4px;\n  color: '#1b1f23b3';\n`\n\nconst Decoration = styled(DiffDecoration)`\n  background-color: #dbedff;\n`\n\nconst DiffView = styled(RDiff)`\n  .diff-gutter-col {\n    width: 30px;\n  }\n\n  tr.diff-line {\n    font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n      monospace;\n  }\n\n  td.diff-gutter {\n    color: rgba(27, 31, 35, 0.3);\n    padding: 0;\n    text-align: center;\n    font-size: 12px;\n    cursor: auto;\n  }\n\n  td.diff-gutter .diff-line-normal {\n    background-color: #cdffd8;\n    border-color: #bef5cb;\n  }\n\n  td.diff-gutter:hover {\n    cursor: pointer;\n    color: rgba(27, 31, 35, 0.6);\n  }\n\n  td.diff-code {\n    font-size: 12px;\n    color: #24292e;\n  }\n\n  td.diff-code-insert .diff-code-edit {\n    background-color: #acf2bd;\n  }\n\n  td.diff-gutter-omit:before {\n    width: 0;\n    background-color: transparent;\n  }\n`\n\n// Diff will be collapsed by default if the file has been deleted or has more than 5 hunks\n// const isDiffCollapsedByDefault = ({ type, hunks }) =>\n//   type === 'delete' || hunks.length > 5 ? true : undefined\n\nconst isDiffCollapsedByDefault = ({ type, hunks }) => undefined\n\nconst Diff = ({\n  oldPath,\n  newPath,\n  type,\n  hunks,\n  fromVersion,\n  toVersion,\n  diffKey,\n  isDiffCompleted,\n  onCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  areAllCollapsed,\n  setAllCollapsed,\n  diffViewStyle\n}) => {\n  const [isDiffCollapsed, setIsDiffCollapsed] = useState(\n    isDiffCollapsedByDefault({ type, hunks })\n  )\n  const copyPathPopoverContentOpts = {\n    default: 'Click to copy file path',\n    copied: 'File path copied!'\n  }\n  const [copyPathPopoverContent, setCopyPathPopoverContent] = useState(\n    copyPathPopoverContentOpts.default\n  )\n\n  const handleCopyPathToClipboard = () => {\n    setCopyPathPopoverContent(copyPathPopoverContentOpts.copied)\n  }\n\n  const handleResetCopyPathPopoverContent = () => {\n    if (copyPathPopoverContent === copyPathPopoverContentOpts.copied) {\n      setCopyPathPopoverContent(copyPathPopoverContentOpts.default)\n    }\n  }\n\n  if (areAllCollapsed !== undefined && areAllCollapsed !== isDiffCollapsed) {\n    setIsDiffCollapsed(areAllCollapsed)\n  } else if (isDiffCompleted && isDiffCollapsed === undefined) {\n    setIsDiffCollapsed(true)\n  }\n\n  return (\n    <Container>\n      <DiffHeader\n        oldPath={oldPath}\n        newPath={newPath}\n        toVersion={toVersion}\n        type={type}\n        diffKey={diffKey}\n        hasDiff={hunks.length > 0}\n        isDiffCollapsed={isDiffCollapsed}\n        setIsDiffCollapsed={(collapse, altKey) => {\n          if (altKey) {\n            return setAllCollapsed(collapse)\n          }\n\n          setAllCollapsed(undefined)\n          setIsDiffCollapsed(collapse)\n        }}\n        isDiffCompleted={isDiffCompleted}\n        onCopyPathToClipboard={handleCopyPathToClipboard}\n        copyPathPopoverContent={copyPathPopoverContent}\n        resetCopyPathPopoverContent={handleResetCopyPathPopoverContent}\n        onCompleteDiff={onCompleteDiff}\n      />\n\n      {!isDiffCollapsed && (\n        <DiffView\n          viewType={diffViewStyle}\n          diffType={type}\n          hunks={hunks}\n          widgets={getComments({ newPath, fromVersion, toVersion })}\n          optimizeSelection={true}\n          selectedChanges={selectedChanges}\n        >\n          {hunks => {\n            const options = {\n              enhancers: [markEdits(hunks)]\n            }\n\n            const tokens = tokenize(hunks, options)\n\n            return hunks.map(hunk => [\n              <Decoration key={'decoration-' + hunk.content}>\n                <More>{hunk.content}</More>\n              </Decoration>,\n              <Hunk\n                key={hunk.content}\n                hunk={hunk}\n                tokens={tokens}\n                gutterEvents={{ onClick: onToggleChangeSelection }}\n              />\n            ])\n          }}\n        </DiffView>\n      )}\n    </Container>\n  )\n}\n\n/*\n  Return true if passing `nextProps` to render would return\n  the same result as passing prevProps to render, otherwise return false\n*/\nconst arePropsEqual = (prevProps, nextProps) =>\n  prevProps.isDiffCompleted === nextProps.isDiffCompleted &&\n  prevProps.areAllCollapsed === nextProps.areAllCollapsed &&\n  prevProps.diffViewStyle === nextProps.diffViewStyle\n\nexport default React.memo(Diff, arePropsEqual)\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport Diff from './Diff'\n\nconst Title = styled.h1`\n  margin-top: 0.5em;\n`\n\nconst DiffSection = ({\n  diff,\n  getDiffKey,\n  title,\n  completedDiffs,\n  isDoneSection,\n  fromVersion,\n  toVersion,\n  handleCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  diffViewStyle,\n  doneTitleRef\n}) => {\n  const [areAllCollapsed, setAllCollapsed] = useState(undefined)\n\n  return (\n    <div>\n      {title && completedDiffs.length > 0 && (\n        <Title ref={doneTitleRef}>{title}</Title>\n      )}\n\n      {diff.map(diffFile => {\n        const diffKey = getDiffKey(diffFile)\n        const isDiffCompleted = completedDiffs.includes(diffKey)\n\n        // If it's the \"done\" section, it shouldn't show if it's not completed\n        if (isDoneSection !== isDiffCompleted) {\n          return null\n        }\n\n        return (\n          <Diff\n            key={`${diffFile.oldRevision}${diffFile.newRevision}`}\n            {...diffFile}\n            // otakustay/react-diff-view#49\n            type={diffFile.type === 'new' ? 'add' : diffFile.type}\n            diffKey={diffKey}\n            diffViewStyle={diffViewStyle}\n            fromVersion={fromVersion}\n            toVersion={toVersion}\n            isDiffCompleted={completedDiffs.includes(diffKey)}\n            onCompleteDiff={handleCompleteDiff}\n            selectedChanges={selectedChanges}\n            onToggleChangeSelection={onToggleChangeSelection}\n            areAllCollapsed={areAllCollapsed}\n            setAllCollapsed={setAllCollapsed}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DiffSection\n","import React, { Component } from 'react'\nimport styled from '@emotion/styled'\nimport ContentLoader from 'react-content-loader'\n\nconst TitleLoader = () => (\n  <ContentLoader\n    speed={1}\n    backgroundColor=\"#eee\"\n    foregroundColor=\"#e6e6e6\"\n    viewBox=\"0 0 400 100\"\n  >\n    <rect width=\"250\" height=\"6\" rx=\"1.5\" />\n  </ContentLoader>\n)\n\nconst DiffLoader = () => (\n  <ContentLoader\n    speed={1}\n    backgroundColor=\"#eee\"\n    foregroundColor=\"#e6e6e6\"\n    viewBox=\"0 0 400 100\"\n  >\n    <rect x=\"0\" y=\"10\" width=\"47%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"10\" width=\"41%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"18\" width=\"43%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"34\" width=\"40%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"42\" width=\"45%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"42\" width=\"40%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"50\" width=\"44%\" height=\"6\" rx=\"1.5\" />\n  </ContentLoader>\n)\n\nconst SkeletonContainer = styled.div`\n  margin-top: 16px;\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n`\n\nconst Header = styled.div({\n  color: '#24292e',\n  backgroundColor: '#fafbfc',\n  padding: '10px',\n  height: '40px'\n})\n\nexport default class UsefulContentNoData extends Component {\n  render() {\n    return (\n      <SkeletonContainer>\n        <Header>\n          <TitleLoader />\n        </Header>\n        <div\n          css={{\n            padding: '5px 10px'\n          }}\n        >\n          <DiffLoader />\n        </div>\n      </SkeletonContainer>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Tooltip } from 'antd'\n\nconst UpgradeSupportAlert = styled(props => (\n  <span {...props}>\n    Check out{' '}\n    <Tooltip\n      placement=\"bottom\"\n      title=\"Upgrade Support is a community-backed place to request and give help when upgrading your app\"\n    >\n      <a\n        href=\"https://github.com/denodev/upgrade-support\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        {...props}\n      >\n        Upgrade Support\n      </a>\n    </Tooltip>{' '}\n    if you are experiencing issues related to Deno during the upgrading process.\n  </span>\n))`\n  padding-top: 10px;\n  a {\n    color: #045dc1;\n\n    &:hover {\n      color: #40a9ff;\n    }\n  }\n`\n\nexport default UpgradeSupportAlert\n","import React, { Component, Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { CloseOutlined } from '@ant-design/icons'\nimport { Button } from 'antd'\nimport { getVersionsInDiff, getChangelogURL } from '../../utils'\nimport { Link } from './Markdown'\nimport UpgradeSupportAlert from './UpgradeSupportAlert'\n\nconst Container = styled.div`\n  position: relative;\n  ${props => props.isVisible && 'margin-top: 16px;'}\n  color: rgba(0, 0, 0, 0.65);\n  ${props => (props.isVisible ? 'max-height: 800px;' : 'max-height: 0px;')}\n  overflow: hidden;\n  transition: max-height 0.4s ease-out, margin-top 0.4s ease-out 0.2s;\n`\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  color: rgba(0, 0, 0, 0.65);\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n`\n\nconst Icon = styled(props => (\n  <span {...props} role=\"img\" aria-label=\"Close useful content section\">\n    📣\n  </span>\n))`\n  margin: 0px 10px;\n`\n\nconst CloseButton = styled(({ toggleVisibility, ...props }) => (\n  <Button\n    {...props}\n    type=\"link\"\n    icon={<CloseOutlined />}\n    onClick={toggleVisibility}\n  />\n))`\n  float: right;\n  position: absolute;\n  top: 11px;\n  right: 12px;\n  font-size: 12px;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  color: rgba(0, 0, 0, 0.45);\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst ReleaseSeparator = styled.hr`\n  margin: 15px 0;\n  background-color: #e1e4e8;\n  height: 0.25em;\n  border: 0;\n`\n\nconst List = styled.ol`\n  padding-inline-start: 18px;\n  margin: 10px 0 0;\n`\n\nclass UsefulContentSection extends Component {\n  state = {\n    isVisible: true\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-render component if it has reloaded the diff on the parent\n    const hasLoaded = this.props.isLoading && !nextProps.isLoading\n    // or if it has been hidden\n    const hasBeenHidden = this.state.isVisible && !nextState.isVisible\n\n    return hasLoaded || hasBeenHidden\n  }\n\n  handleToggleVisibility = () =>\n    this.setState(({ isVisible }) => ({ isVisible: !isVisible }))\n\n  render() {\n    const { fromVersion, toVersion } = this.props\n    const { isVisible } = this.state\n\n    const versions = getVersionsInDiff({ fromVersion, toVersion })\n    const doesAnyVersionHaveUsefulContent = versions.some(\n      ({ usefulContent }) => !!usefulContent\n    )\n\n    if (!doesAnyVersionHaveUsefulContent) {\n      return null\n    }\n\n    const hasMoreThanOneRelease = versions.length > 1\n\n    return (\n      <Container isVisible={isVisible}>\n        <InnerContainer>\n          <h2>\n            <Icon /> Useful content for upgrading\n          </h2>\n\n          <CloseButton toggleVisibility={this.handleToggleVisibility} />\n\n          {versions.map(({ usefulContent, version }, key) => {\n            const versionWithoutEndingZero = version.slice(0, 4)\n\n            const links = [\n              ...usefulContent.links,\n              {\n                title: `Deno ${versionWithoutEndingZero} changelog`,\n                url: getChangelogURL({ version: versionWithoutEndingZero })\n              }\n            ]\n\n            return (\n              <Fragment key={key}>\n                {key > 0 && <ReleaseSeparator />}\n\n                {hasMoreThanOneRelease && (\n                  <h3>Release {versionWithoutEndingZero}</h3>\n                )}\n\n                <span>{usefulContent.description}</span>\n\n                <List>\n                  {links.map(({ url, title }, key) => (\n                    <li key={`${url}${key}`}>\n                      <Link href={url}>{title}</Link>\n                    </li>\n                  ))}\n                </List>\n              </Fragment>\n            )\n          })}\n\n          <UpgradeSupportAlert />\n        </InnerContainer>\n      </Container>\n    )\n  }\n}\n\nexport default UsefulContentSection\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Radio } from 'antd'\n\nconst Container = styled.div`\n  position: relative;\n  border-width: 1px;\n  margin-top: 16px;\n  flex-direction: row-reverse;\n  display: flex;\n`\n\nconst DiffViewStyleOptions = styled(\n  ({ handleViewStyleChange, diffViewStyle }) => {\n    return (\n      <Container>\n        <Radio.Group value={diffViewStyle}>\n          <Radio.Button\n            value=\"split\"\n            onChange={() => handleViewStyleChange('split')}\n          >\n            Split\n          </Radio.Button>\n          <Radio.Button\n            value=\"unified\"\n            onChange={() => handleViewStyleChange('unified')}\n          >\n            Unified\n          </Radio.Button>\n        </Radio.Group>\n      </Container>\n    )\n  }\n)`\n  float: right;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 12px;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  &,\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\nexport default DiffViewStyleOptions\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { keyframes, css } from '@emotion/core'\nimport Confetti from 'react-dom-confetti'\nimport { Popover } from 'antd'\n\nconst shake = keyframes`\n  0% {\n    transform: translate(0, 0);\n  }\n\n  10%, 90% {\n    transform: translate(0, -2px);\n  }\n\n  20%, 80% {\n    transform: translate(0, 3px);\n  }\n\n  30%, 50%, 70% {\n    transform: translate(0, -5px);\n  }\n\n  40%, 60% {\n    transform: translate(0, 5px);\n  }\n`\n\nconst CompletedFilesCounter = styled(\n  ({ completed, total, popoverContent, popoverCursorType, ...props }) => (\n    <div {...props}>\n      <Popover\n        content={popoverContent}\n        trigger=\"hover\"\n        placement=\"right\"\n        overlayStyle={{\n          position: 'fixed'\n        }}\n      >\n        <span className=\"completedAmount\">\n          {completed === 0 ? 1 : completed}\n        </span>{' '}\n        /{total}\n      </Popover>\n      <Confetti\n        active={completed === total}\n        config={{\n          elementCount: 200,\n          angle: 130,\n          startVelocity: 30\n        }}\n      />\n    </div>\n  )\n)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: #d5eafd;\n  padding: 10px;\n  border: 1px solid #1890ff;\n  border-radius: 20px;\n  color: #7dadda;\n  transform: ${({ completed }) =>\n    completed ? 'translateY(0px)' : 'translateY(70px)'};\n  display: flex;\n  align-self: flex-end;\n  transition: transform 0.3s;\n  cursor: ${({ popoverCursorType }) => popoverCursorType};\n  ${({ completed, total }) =>\n    completed === total &&\n    css`\n      transform: translateY(70px);\n      animation: ${shake};\n      animation-duration: 1.5s;\n    `}\n\n  .completedAmount {\n    color: #1890ff;\n  }\n`\n\nexport default CompletedFilesCounter\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Alert } from 'antd'\nimport Markdown from './Markdown'\n\nconst Container = styled.div({\n  width: '100%',\n  marginTop: '16px'\n})\n\nexport const AppNameWarning = () => (\n  <Container>\n    <Alert\n      message={\n        <Markdown>\n          Keep in mind that the patches are more than the actual project needs\n          to be modified, for example `function copyFile(from: string, to:\n          string)` to `function copyFile(fromPath: string, toPath: string)`.\n        </Markdown>\n      }\n      type=\"info\"\n      closable\n    />\n  </Container>\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Alert } from 'antd'\nimport { parseDiff, withChangeSelect } from 'react-diff-view'\nimport 'react-diff-view/style/index.css'\nimport { getDiffPatchURL } from '../../utils'\nimport DiffSection from './Diff/DiffSection'\nimport DiffLoading from './Diff/DiffLoading'\nimport UsefulContentSection from './UsefulContentSection'\nimport ViewStyleOptions from './Diff/DiffViewStyleOptions'\nimport CompletedFilesCounter from './CompletedFilesCounter'\nimport { AppNameWarning } from './AppNameWarning'\n\nconst Container = styled.div`\n  width: 90%;\n`\n\nconst getDiffKey = ({ oldRevision, newRevision }) =>\n  `${oldRevision}${newRevision}`\n\nconst scrollToRef = ref => ref.current.scrollIntoView({ behavior: 'smooth' })\n\nconst DiffViewer = ({\n  showDiff,\n  fromVersion,\n  toVersion,\n  selectedChanges,\n  onToggleChangeSelection\n}) => {\n  const [isLoading, setLoading] = useState(true)\n  const [diff, setDiff] = useState(null)\n  const [completedDiffs, setCompletedDiffs] = useState([])\n  const [isGoToDoneClicked, setIsGoToDoneClicked] = useState(false)\n  const donePopoverPossibleOpts = {\n    done: {\n      content: 'Scroll to Done section',\n      cursorType: 's-resize'\n    },\n    top: {\n      content: 'Scroll to Top',\n      cursorType: 'n-resize'\n    }\n  }\n  const [donePopoverOpts, setDonePopoverOpts] = useState(\n    donePopoverPossibleOpts.done\n  )\n  const doneTitleRef = useRef(null)\n\n  const scrollToDone = () => scrollToRef(doneTitleRef)\n  const scrollToTop = () => window.scrollTo({ top: 0, behavior: 'smooth' })\n\n  const handleCompletedFilesCounterClick = () => {\n    setIsGoToDoneClicked(!isGoToDoneClicked)\n    if (isGoToDoneClicked) {\n      setDonePopoverOpts(donePopoverPossibleOpts.done)\n      scrollToTop()\n    } else {\n      setDonePopoverOpts(donePopoverPossibleOpts.top)\n      scrollToDone()\n    }\n  }\n\n  const handleCompleteDiff = diffKey => {\n    if (completedDiffs.includes(diffKey)) {\n      return setCompletedDiffs(prevCompletedDiffs =>\n        prevCompletedDiffs.filter(completedDiff => completedDiff !== diffKey)\n      )\n    }\n\n    setCompletedDiffs(prevCompletedDiffs => [...prevCompletedDiffs, diffKey])\n  }\n\n  const renderUpgradeDoneMessage = ({ diff, completedDiffs }) =>\n    diff.length === completedDiffs.length && (\n      <Alert\n        style={{ marginTop: 16 }}\n        message=\"Your upgrade is done 🎉🎉\"\n        type=\"success\"\n        showIcon\n        closable\n      />\n    )\n\n  const resetCompletedDiff = () => setCompletedDiffs([])\n\n  const [diffViewStyle, setViewStyle] = useState(\n    localStorage.getItem('viewStyle') || 'split'\n  )\n\n  const handleViewStyleChange = newViewStyle => {\n    setViewStyle(newViewStyle)\n    localStorage.setItem('viewStyle', newViewStyle)\n  }\n\n  useEffect(() => {\n    if (!showDiff) {\n      return\n    }\n\n    const fetchDiff = async () => {\n      setLoading(true)\n\n      const response = await (\n        await fetch(getDiffPatchURL({ fromVersion, toVersion }))\n      ).text()\n\n      setDiff(\n        parseDiff(response).sort(({ newPath }) =>\n          newPath.includes('package.json') ? -1 : 1\n        )\n      )\n\n      resetCompletedDiff()\n\n      setLoading(false)\n    }\n\n    const debounce = setTimeout(() => {\n      fetchDiff()\n    }, 750)\n    return () => {\n      clearTimeout(debounce)\n    }\n  }, [fromVersion, showDiff, toVersion])\n\n  if (!showDiff) {\n    return null\n  }\n\n  if (isLoading) {\n    return (\n      <Container>\n        <DiffLoading />\n      </Container>\n    )\n  }\n\n  const diffSectionProps = {\n    diff: diff,\n    getDiffKey: getDiffKey,\n    completedDiffs: completedDiffs,\n    fromVersion: fromVersion,\n    toVersion: toVersion,\n    handleCompleteDiff: handleCompleteDiff,\n    selectedChanges: selectedChanges,\n    onToggleChangeSelection: onToggleChangeSelection\n  }\n\n  return (\n    <Container>\n      <UsefulContentSection\n        isLoading={isLoading}\n        fromVersion={fromVersion}\n        toVersion={toVersion}\n      />\n\n      <AppNameWarning />\n\n      <ViewStyleOptions\n        handleViewStyleChange={handleViewStyleChange}\n        diffViewStyle={diffViewStyle}\n      />\n\n      <DiffSection\n        {...diffSectionProps}\n        isDoneSection={false}\n        diffViewStyle={diffViewStyle}\n      />\n\n      {renderUpgradeDoneMessage({ diff, completedDiffs })}\n\n      <DiffSection\n        {...diffSectionProps}\n        isDoneSection={true}\n        title=\"Done\"\n        doneTitleRef={doneTitleRef}\n      />\n\n      <CompletedFilesCounter\n        completed={completedDiffs.length}\n        total={diff.length}\n        onClick={handleCompletedFilesCounterClick}\n        popoverContent={donePopoverOpts.content}\n        popoverCursorType={donePopoverOpts.cursorType}\n      />\n    </Container>\n  )\n}\n\nexport default withChangeSelect({ multiple: true })(DiffViewer)\n","import React, { useState } from 'react'\nimport { SettingOutlined } from '@ant-design/icons'\nimport { Popover, Button, Checkbox } from 'antd'\nimport { SHOW_LATEST_RCS } from '../../utils'\n\nconst Settings = ({ handleSettingsChange }) => {\n  const [popoverVisibility, setVisibility] = useState(false)\n\n  const handleClickChange = visibility => setVisibility(visibility)\n\n  const updateCheckboxValues = checkboxValues =>\n    handleSettingsChange(checkboxValues)\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      content={\n        <>\n          <Checkbox.Group onChange={updateCheckboxValues}>\n            <div>\n              <Checkbox value={SHOW_LATEST_RCS}>{SHOW_LATEST_RCS}</Checkbox>\n            </div>\n          </Checkbox.Group>\n        </>\n      }\n      trigger=\"click\"\n      visible={popoverVisibility}\n      onVisibleChange={handleClickChange}\n    >\n      <Button icon={<SettingOutlined />} />\n    </Popover>\n  )\n}\n\nexport default Settings\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { Card } from 'antd'\nimport GitHubButton from 'react-github-btn'\nimport ReactGA from 'react-ga'\nimport VersionSelector from '../common/VersionSelector'\nimport DiffViewer from '../common/DiffViewer'\nimport Settings from '../common/Settings'\nimport { homepage } from '../../../package.json'\nimport logo from '../../assets/logo.svg'\nimport { SHOW_LATEST_RCS } from '../../utils'\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 30px;\n`\n\nconst Container = styled(Card)`\n  width: 90%;\n  border-radius: 3px;\n  border-color: #e8e8e8;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst LogoImg = styled.img`\n  width: 100px;\n  margin-bottom: 15px;\n`\n\nconst TitleHeader = styled.h1`\n  margin: 0;\n  margin-left: 15px;\n`\n\nconst StarButton = styled(({ className, ...props }) => (\n  <div className={className}>\n    <GitHubButton {...props} />\n  </div>\n))`\n  margin-top: 10px;\n  margin-left: 15px;\n  margin-right: auto;\n`\n\nconst Home = () => {\n  const [fromVersion, setFromVersion] = useState('')\n  const [toVersion, setToVersion] = useState('')\n  const [showDiff, setShowDiff] = useState(false)\n  const [settings, setSettings] = useState({\n    [`${SHOW_LATEST_RCS}`]: false\n  })\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.initialize('UA-123999279-2')\n      ReactGA.pageview('/')\n    }\n  }, [])\n\n  const handleShowDiff = ({ fromVersion, toVersion }) => {\n    if (fromVersion === toVersion) {\n      return\n    }\n\n    setFromVersion(fromVersion)\n    setToVersion(toVersion)\n    setShowDiff(true)\n  }\n\n  const handleSettingsChange = settingsValues => {\n    const normalizedIncomingSettings = settingsValues.reduce((acc, val) => {\n      acc[val] = true\n      return acc\n    }, {})\n\n    setSettings(normalizedIncomingSettings)\n  }\n\n  return (\n    <Page>\n      <Container>\n        <TitleContainer>\n          <LogoImg\n            alt=\"Deno upgrade helper logo\"\n            title=\"Deno upgrade helper logo\"\n            src={logo}\n          />\n\n          <a href={homepage}>\n            <TitleHeader>Deno upgrade helper</TitleHeader>\n          </a>\n\n          <StarButton\n            href=\"https://github.com/denodev/upgrade-helper\"\n            data-icon=\"octicon-star\"\n            data-show-count=\"true\"\n            aria-label=\"Star denodev/upgrade-helper on GitHub\"\n          >\n            Star\n          </StarButton>\n\n          <Settings handleSettingsChange={handleSettingsChange} />\n        </TitleContainer>\n\n        <VersionSelector\n          showDiff={handleShowDiff}\n          showReleaseCandidates={settings[SHOW_LATEST_RCS]}\n        />\n      </Container>\n\n      <DiffViewer\n        showDiff={showDiff}\n        fromVersion={fromVersion}\n        toVersion={toVersion}\n      />\n    </Page>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Home from './components/pages/Home'\n\nconst App = props => <Home />\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// this line HAAAAAAAAS to go\nconst versions = ['0.37', '0.36']\n\nexport default versions.map(version => ({\n  ...require(`./${version}`).default,\n  version\n}))\n","const fixtureVersions = ['0.37', '0.36']\n\njest.setMock(\n  '../index.js',\n  fixtureVersions.map(version => ({\n    version\n  }))\n)\n"],"sourceRoot":""}